@inject HttpClient Http
@inject NavigationManager Nav
@page "/"

<h1>Bienvenue chez AirTech !</h1>

<table class="table table-hover">
    <thead>
        <tr>
            <td scope="col">From</td>
            <td scope="col">To</td>
            <td scope="col">Price</td>
            <td scope="col">Stock</td>
            <td scope="col">Place voulue</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var travel in Travels)
        {
            <tr>
                <td scope="row">@travel.From</td>
                <td>@travel.To</td>
                <td>@travel.Price €</td>
                <td>@travel.Stock</td>
                <td><input type="number" @onchange="@(e=> AddBillet(e, travel))" /></td>
            </tr>
        }

    </tbody>
</table>

<label>Prénom</label>
<input class="form-control" type="text" @bind="Client.FirstName" placeholder="FirstName" />
<label>Nom</label>
<input class="form-control" type="text" @bind="Client.LastName" placeholder="LastName" />
<br />
<button class="btn btn-primary" @onclick="RedirectToOrder">Submit</button>

@code{

    private List<AirTech.Shared.Travel> Travels { get; set; } = new List<AirTech.Shared.Travel>();

    private Dictionary<AirTech.Shared.Travel, int> CountPerTravel { get; set; } = new Dictionary<AirTech.Shared.Travel, int>();

    private AirTech.Shared.Client Client { get; set; } = new AirTech.Shared.Client();


    protected override async Task OnInitializedAsync()
    {
        Travels = await Http.GetFromJsonAsync<List<AirTech.Shared.Travel>>("Travel");

        if (Travels == null)
        {
            Travels = new List<AirTech.Shared.Travel>();
        }
    }

    private async Task RedirectToOrder()
    {
        List<AirTech.Shared.Billet> billets = new List<AirTech.Shared.Billet>();
        foreach ((AirTech.Shared.Travel travel, int nb) in CountPerTravel)
        {
            for (int i = 0; i < nb; i++)
            {
                billets.Add(new AirTech.Shared.Billet { IdTravel = travel.Id, Date = DateTime.UtcNow, UnitPrice = travel.Price });
            }
        }
        var response = await Http.PostAsJsonAsync<AirTech.Shared.Order>("Order", new AirTech.Shared.Order() { Billet = billets, Cilent = Client });
        var insertedOrder = await response.Content.ReadFromJsonAsync<AirTech.Shared.Order>();
        Nav.NavigateTo($"/order/{insertedOrder.Id}");
    }

    private void AddBillet(ChangeEventArgs e, AirTech.Shared.Travel travel)
    {
        CountPerTravel.Add(travel, int.Parse(e.Value.ToString()));
    }

}